{"version":3,"sources":["js/wasmHandler.js","js/app.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../node_modules/parcel-plugin-wasm.rs/wasm-loader.js","../node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["multithreading","ctx","multithreadingWorkers","multithreadingAmount","navigator","hardwareConcurrency","webworkerLoaded","w","Promise","r","addEventListener","once","setWorkerSettings","name","val","i","postMessage","init","_ctx","loads","worker","Worker","onmessage","handleMultithreaderReturn","push","startTime","performance","now","all","console","log","toFixed","e","data","width","height","startX","imageData","ImageData","putImageData","renderFrame","xCam","yCam","scale","module","gen_data","stripWidth","Math","floor","waits","canvas","fps","scaleFactor","frame","keys","scaleCanvas","window","innerWidth","innerHeight","style","document","getElementById","getContext","WasmHandler","onresize","oncontextmenu","preventDefault","onkeydown","key","toLowerCase","onkeyup","lastUpdateTime","panAmount","scalePanAmount","debugEl","resScaleEl","resScaleTextEl","oninput","value","textContent","linesBetweenEl","checked","update","timeNow","deltaTime","round","drawDebug","requestAnimationFrame","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","resolve","code","LazyPromise","reject","loadBundles","slice","then","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","load","register","bundle","substring","lastIndexOf","bundleLoader","resolved","catch","executor","promise","prototype","onSuccess","onError","script","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":"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","file":"app.173d3895.js","sourceRoot":"../src","sourcesContent":["import module from '../../wasm/Cargo.toml';\n\nexport let multithreading = true;\n\nlet multithreadingWorkers = [];\nexport let multithreadingAmount = navigator.hardwareConcurrency;\nlet ctx;\n\n/*let linesBetweenColumns = false;\nexport function setLinesBetweenColumns(val) { // Allowing setting it externally\n  linesBetweenColumns = val;\n}*/\n\nconst webworkerLoaded = w =>\n  new Promise(r => w.addEventListener(\"message\", r, { once: true }));\n\nexport function setWorkerSettings(name, val) {\n  for (let i = 0; i < multithreadingAmount; i++) {\n    multithreadingWorkers[i].postMessage([name, val]);\n  }\n}\n\nexport async function init(_ctx) {\n  ctx = _ctx;\n\n  let loads = [];\n  for (let i = 0; i < multithreadingAmount; i++) {\n    let worker = new Worker('wasmMultithread.js');\n\n    worker.onmessage = handleMultithreaderReturn;\n\n    multithreadingWorkers.push(worker);\n    loads.push(webworkerLoaded(worker));\n  }\n\n  let startTime = performance.now();\n  await Promise.all(loads);\n\n  console.log(`${(performance.now() - startTime).toFixed(2)}ms`);\n\n  //await (new Promise(resolve => setTimeout(resolve, 1000)));\n}\n\nfunction handleMultithreaderReturn(e) {\n  if (e.data === 'loaded') return;\n\n  let [i, width, height, data] = e.data;\n\n  let startX = (i * width);\n\n  let imageData = new ImageData(data, width, height);\n\n  ctx.putImageData(imageData, startX, 0);\n}\n\nexport async function renderFrame(width, height, xCam, yCam, scale) {\n  if (!multithreading) {\n    handleMultithreaderReturn({data: [0, width, height, module.gen_data(width, width, 0, height, xCam, yCam, scale)]});\n    //module.render_frame(ctx, width, height, xCam, yCam, scale);\n\n    return;\n  }\n\n  let stripWidth = Math.floor(width / multithreadingAmount);\n\n  //let stripCurrent = 0;\n  let waits = [];\n  for (let i = 0; i < multithreadingAmount; i++) {\n    multithreadingWorkers[i].postMessage([i, stripWidth, width, height, xCam, yCam, scale]);\n\n    //stripCurrent += stripWidth;\n\n    waits.push(webworkerLoaded(multithreadingWorkers[i]));\n  }\n\n  await Promise.all(waits);\n\n  //module.render_frame(ctx, width, height, xCam, yCam, scale);\n}","import * as WasmHandler from './wasmHandler';\n\n(async function () { let canvas, ctx;\n\nlet scaleFactor = 2;\n\nlet width = 0;\nlet height = 0;\n\nlet frame = 0;\nlet fps;\n\nlet xCam = -0.5;\nlet yCam = 0;\n\nlet scale = 1.2;\n\nlet keys = [];\n\nfunction scaleCanvas() {\n  width = Math.floor(window.innerWidth / scaleFactor);\n  height = Math.floor(window.innerHeight / scaleFactor);\n\n  canvas.width = width;\n  canvas.height = height;\n\n  canvas.style.width = `${window.innerWidth}px`;\n  canvas.style.height = `${window.innerHeight}px`;\n}\n\ncanvas = document.getElementById('canvas');\nctx = canvas.getContext('2d');\n\nawait WasmHandler.init(ctx);\n\nscaleCanvas();\nwindow.onresize = scaleCanvas;\n  \ndocument.oncontextmenu = function(e) {\n  e.preventDefault();\n  return false;\n}\n  \ndocument.onkeydown = function(e) {\n  let key = e.key.toLowerCase();\n\n  keys[key] = true;\n};\n\ndocument.onkeyup = function(e) {\n  let key = e.key.toLowerCase();\n    \n  keys[key] = false;\n};\n\nlet lastUpdateTime = performance.now();\n\nlet panAmount = 0.01;\n\nfunction scalePanAmount() {\n  return panAmount * scale;\n}\n\nasync function update() {\n  let timeNow = performance.now();\n  let deltaTime = (timeNow - lastUpdateTime) / 1000;\n  lastUpdateTime = timeNow;\n\n  fps = Math.round(1 / deltaTime);\n\n  if (keys['w'] || keys['arrowup']) {\n    yCam -= scalePanAmount();\n  }\n\n  if (keys['s'] || keys['arrowdown']) {\n    yCam += scalePanAmount();\n  }\n\n  if (keys['a'] || keys['arrowleft']) {\n    xCam -= scalePanAmount();\n  }\n\n  if (keys['d'] || keys['arrowright']) {\n    xCam += scalePanAmount();\n  }\n\n  if (keys['z']) {\n    scale *= 0.99;\n  }\n\n  if (keys['x']) {\n    scale *= 1.01;\n  }\n\n  await WasmHandler.renderFrame(width, height, xCam, yCam, scale);\n\n  frame++;\n\n  drawDebug();\n\n  //renderText(4, 14, 12, 'black', `${frame} | ${(performance.now() - startTime).toFixed(2)}ms ${fps} | ${xCam.toFixed(2)} ${yCam.toFixed(2)} | ${scale.toFixed(2)}`, 'left');\n\n  requestAnimationFrame(update);\n}\n\nlet debugEl = document.getElementById('debug');\n\nlet resScaleEl = document.getElementById('resScale');\nlet resScaleTextEl = document.getElementById('resScaleText');\n\nresScaleEl.oninput = () => {\n  scaleFactor = resScaleEl.value;\n  resScaleTextEl.textContent = scaleFactor;\n\n  scaleCanvas();\n};\n\nlet linesBetweenEl = document.getElementById('linesBetween');\n\nlinesBetweenEl.oninput = () => {\n  WasmHandler.setWorkerSettings('linesBetweenMultithreadColumns', linesBetweenEl.checked);\n};\n\nasync function drawDebug() {\n  debugEl.textContent = `F: ${frame} FPS: ${fps}\nCamera Position: ${xCam.toFixed(2)}, ${yCam.toFixed(2)} Scale: ${scale.toFixed(2)}\nResolution: Scaled: ${width}x${height}, Scale Factor: ${scaleFactor}, Raw: ${window.innerWidth}x${window.innerHeight}\nMultithreading: ${WasmHandler.multithreading} - ${WasmHandler.multithreadingAmount}\n`;\n}\n\nupdate();\n})();","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","var wasm;const __exports = {};\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {boolean} linesBetweenColumns\n* @param {number} renderWidth\n* @param {number} actualWidth\n* @param {number} xOffset\n* @param {number} height\n* @param {number} xCam\n* @param {number} yCam\n* @param {number} scale\n* @returns {Uint8ClampedArray}\n*/\n__exports. gen_data = function(linesBetweenColumns, renderWidth, actualWidth, xOffset, height, xCam, yCam, scale) {\n    var ret = wasm.gen_data(linesBetweenColumns, renderWidth, actualWidth, xOffset, height, xCam, yCam, scale);\n    return takeObject(ret);\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\n__exports.__wbg_newwithlength_eb6b351ada971d55 = function(arg0) {\n    var ret = new Uint8ClampedArray(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\n__exports.__wbg_setindex_ab27c5758a457930 = function(arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = arg2;\n};\n\n__exports.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './mandelweb_wasm_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './mandelweb_wasm_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './mandelweb_wasm_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    ","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}